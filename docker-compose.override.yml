services:
  api:
    ports:
      - "${API_PORT:-8001}:8001"
    volumes:
      - models_mt5:/models
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  ml-scheduler:
    build:
      context: .
      dockerfile: ml/Dockerfile
    command: python -u ml/scheduler.py
    depends_on:
      db:
        condition: service_healthy
    env_file: [.env]
    environment:
      DATABASE_URL: "postgresql+psycopg://trader:trader123@db:5432/mt5_trading"
      ML_SYMBOL: "EURUSD"
      ML_TIMEFRAME: "H1"
    volumes:
      - ./ml:/app/ml:rw
      - models_mt5:/models
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  ml-trainer:
    build:
      context: .
      dockerfile: ml/Dockerfile
    # Use base compose command (prepare_dataset.py) to generate dataset and pass healthcheck
    depends_on:
      db:
        condition: service_healthy
    env_file: [.env]
    volumes:
      - models_mt5:/models
    restart: "no"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  pgadmin:
    ports:
      - "${PGADMIN_PORT:-5051}:80"

volumes:
  models_mt5:
    name: models_mt5
    external: true
