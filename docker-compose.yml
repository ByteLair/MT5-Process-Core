services:
  db:
    image: timescale/timescaledb:2.14.2-pg16
    container_name: mt5_db
    restart: unless-stopped
    env_file: .env
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
    expose:
      - "5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - ./docker/postgres.conf.d/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-trader} -d ${POSTGRES_DB:-mt5_trading} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
    # mem_limit for older compose versions (optional)
    mem_limit: 2g
    networks:
      default:
        aliases: [db, mt5_db]

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: mt5-api
    container_name: mt5_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: "${DATABASE_URL:-postgresql+psycopg://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader123}@db:5432/${POSTGRES_DB:-mt5_trading}}"
      PORT: ${API_PORT_INTERNAL:-8001}
      UVICORN_WORKERS: ${UVICORN_WORKERS:-1}
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "trader"
      DB_PASS: "trader123"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT:-8001}:8001"
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8001
      --access-log
    
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8001/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
    mem_limit: 2g
      


  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: mt5_pgadmin
    restart: unless-stopped
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin123}
    depends_on:
      - db
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    # If you do not use pgAdmin remotely, remove the `ports` mapping or bind it to localhost only
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512m"
    mem_limit: 512m


  ml-trainer:
    build:
      context: ./ml
    image: ml-trainer
    container_name: mt5_ml_trainer
    restart: unless-stopped
    environment:
      DB_HOST: "db"
      DB_NAME: "${POSTGRES_DB:-mt5_trading}"
      DB_USER: "${POSTGRES_USER:-trader}"
      DB_PASS: "${POSTGRES_PASSWORD:-trader123}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./ml/data:/app/data:rw
      - models_mt5:/app/models:rw
    command: ["python", "prepare_dataset.py"]
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/data/dataset.csv || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
    mem_limit: 2g

volumes:
  db_data:
  models_mt5:
    external: true
