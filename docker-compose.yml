# compose/docker-compose.yml
services:
  mt5_db:
    image: timescale/timescaledb:2.16.1-pg16
    container_name: mt5-trading-db-mt5_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ../volumes/timescaledb:/var/lib/postgresql/data
      - ../init-scripts:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped

  mt5_api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: mt5-trading-db-mt5_api
    env_file:
      - ../secrets/.env
    environment:
      # fallback se .env nÃ£o tiver DATABASE_URL
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: mt5_db
      POSTGRES_PORT: "5432"
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      mt5_db:
        condition: service_healthy
    ports:
      - "8001:8001"
    volumes:
      - ../api/app:/app/app:rw # hot-reload em dev
      - ../logs:/app/logs # logs fora do Git
      - ../data/raw:/app/data_raw # dados brutos (se precisar ler)
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8001
    restart: unless-stopped

networks:
  default:
    name: mt5-trading-db-net
