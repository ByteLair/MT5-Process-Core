server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Logs dos containers Docker via JSON files
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs: attrs
            tag: attrs.tag
      - json:
          expressions:
            container_name: attrs.name
          source: attrs
      - labels:
          container_name:
          stream:
      - output:
          source: output

  # Logs da aplicação API
  - job_name: mt5_api
    static_configs:
      - targets:
          - localhost
        labels:
          job: mt5_api
          app: trading
          __path__: /app/logs/*.log
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_lines: 500
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<level>\w+) - (?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          format: '2006-01-02 15:04:05,000'
          source: timestamp

  # Logs do sistema de health checks
  - job_name: health_checks
    static_configs:
      - targets:
          - localhost
        labels:
          job: health_checks
          app: monitoring
          __path__: /app/logs/health-checks/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<component>\w+): (?P<message>.*)$'
      - labels:
          level:
          component:
      - timestamp:
          format: '2006-01-02 15:04:05'
          source: timestamp

  # Logs do PostgreSQL
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          app: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) \w+ \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          format: '2006-01-02 15:04:05.000'
          source: timestamp

  # Logs do scheduler (cron jobs)
  - job_name: scheduler
    static_configs:
      - targets:
          - localhost
        labels:
          job: scheduler
          app: automation
          __path__: /var/log/cron*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2} \d{2}:\d{2}:\d{2}) (?P<host>\S+) (?P<process>\S+): (?P<message>.*)$'
      - labels:
          process:
      - timestamp:
          format: 'Jan _2 15:04:05'
          source: timestamp

  # Logs de erro do sistema
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2} \d{2}:\d{2}:\d{2}) (?P<host>\S+) (?P<process>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)$'
      - labels:
          process:
      - timestamp:
          format: 'Jan _2 15:04:05'
          source: timestamp
