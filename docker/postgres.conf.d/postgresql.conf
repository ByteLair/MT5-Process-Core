# Connections and Basic Settings
listen_addresses = '*'                  # Listen on all interfaces for container networking
max_connections = 200                    # Increased for PgBouncer connection pooling
superuser_reserved_connections = 5       # Reserved for admin/maintenance
idle_in_transaction_session_timeout = 600000  # 10 minutes - kill idle transactions
statement_timeout = 0                    # Let application control timeout
tcp_keepalives_idle = 60                # TCP keepalive settings
tcp_keepalives_interval = 10
tcp_keepalives_count = 5

# Memory Settings
shared_buffers = '7GB'                  # 25% of RAM (adjust for your server)
work_mem = '32MB'                       # Per-operation memory
maintenance_work_mem = '512MB'          # For maintenance operations
effective_cache_size = '15GB'            # 50-75% of RAM (adjust for your server)

# Write Ahead Log
wal_level = 'replica'                   # Needed for TimescaleDB
max_wal_size = '4GB'
min_wal_size = '1GB'
checkpoint_timeout = '15min'
checkpoint_completion_target = 0.9

# Query Planner
random_page_cost = 1.1                  # Assuming SSD storage
effective_io_concurrency = 200          # Concurrent IO operations

# Autovacuum Settings
autovacuum = on
autovacuum_vacuum_scale_factor = 0.05   # More aggressive vacuum
autovacuum_analyze_scale_factor = 0.02  # More aggressive analyze
autovacuum_vacuum_cost_delay = 2        # Lower delay for more aggressive cleanup
autovacuum_vacuum_cost_limit = 1000     # Higher limit for more aggressive cleanup

# Extension Loading
shared_preload_libraries = 'timescaledb,pg_stat_statements'

# Query Statistics
pg_stat_statements.max = 10000
pg_stat_statements.track = all
track_io_timing = on                    # For IO statistics
track_functions = all                   # Track function statistics

# TimescaleDB Settings
timescaledb.max_background_workers = 8
timescaledb.telemetry_level = 'off'     # Disable telemetry

# Logging Settings
log_destination = 'stderr'              # Docker captures stderr
logging_collector = off                 # Docker handles log collection
log_min_duration_statement = 1000       # Log slow queries (1 sec)
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0                      # Log all temp files
log_autovacuum_min_duration = 0         # Log all autovacuum operations

# Client Connection Defaults
datestyle = 'iso, mdy'
timezone = 'UTC'
