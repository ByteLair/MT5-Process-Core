{{- /* pragma: allowlist secret */ -}}
{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgres
    {{- include "mt5-trading.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
              name: postgres
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.auth.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.auth.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.auth.database }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: TIMESCALEDB_TELEMETRY
              value: {{ .Values.config.timescaledb.telemetry | quote }}
          volumeMounts:
            - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          {{- toYaml .Values.postgres.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgres.auth.username }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgres.auth.username }}
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        {{- if .Values.postgres.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgres-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "mt5-trading.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgres.service.type }}
  ports:
  - port: {{ .Values.postgres.service.port }}
    targetPort: {{ .Values.postgres.service.port }}
    protocol: TCP
    name: postgres
  selector:
    app: postgres

---
{{- if .Values.postgres.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgres-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.postgres.persistence.storageClass }}
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
{{- end }}
{{- end }}
